<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PowerShell on IvoBeerens.NL | All about End User Computing, AVD, W365 and Infrastructure as Code (IaC)</title><link>http://localhost:1313/logbook/site/categories/powershell/</link><description>Recent content in PowerShell on IvoBeerens.NL | All about End User Computing, AVD, W365 and Infrastructure as Code (IaC)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 24 Feb 2024 09:43:55 +0100</lastBuildDate><atom:link href="http://localhost:1313/logbook/site/categories/powershell/index.xml" rel="self" type="application/rss+xml"/><item><title>VIBSearch Finding VIB versions</title><link>http://localhost:1313/logbook/site/2014/12/17/vibsearch-finding-vib-versions/</link><pubDate>Wed, 17 Dec 2014 09:28:56 +0000</pubDate><guid>http://localhost:1313/logbook/site/2014/12/17/vibsearch-finding-vib-versions/</guid><description>VIBSearch is a simple PowerShell script with a GUI that will search for a specified VIB or all the VIBS installed on the ESXi hosts. A VIB stands for vSphere Installation Bundle (VIB). VIBs are used to package and distribute ESXi software such as drivers. The GUI is designed with SAPIEN PowerShell Studio 2014.
With VIBSearch it is easily to verify that all the ESXi host in the cluster have the same VIB versions installed.</description></item><item><title>Hyper-V Get Snapshot checkpoint file sizes on Cluster Shared Volumes with PowerShell</title><link>http://localhost:1313/logbook/site/2013/09/17/list-hyper-v-snapshot-file-sizes-on-cluster-shared-volumes-with-powershell/</link><pubDate>Tue, 17 Sep 2013 13:39:07 +0000</pubDate><guid>http://localhost:1313/logbook/site/2013/09/17/list-hyper-v-snapshot-file-sizes-on-cluster-shared-volumes-with-powershell/</guid><description>During a Windows Server 2012 Hyper-V Health Check I needed to know the snapshot file sizes for the all the snapshots on the Clustered Shared Volumes (CSVs). The Get-VMCheckpoint Cmdlet does not report the snapshot size. So I create a PowerShell one-liner that displays the following information:
Location of the snapshot file Date and time that the snapshot file was created Last write access time of the snapshot file File size in MBs The PowerShell one-liner is executed from a Hyper-V 2012 host that has access to all the Cluster Shared Volumes (CSVs).</description></item><item><title>Health Check your System Center Virtual Machine Server (SCVMM) 2012 environent with PowerShell</title><link>http://localhost:1313/logbook/site/2013/01/28/health-check-your-system-center-virtual-machine-server-scvmm-2012-environent-with-powershell/</link><pubDate>Mon, 28 Jan 2013 10:07:16 +0000</pubDate><guid>http://localhost:1313/logbook/site/2013/01/28/health-check-your-system-center-virtual-machine-server-scvmm-2012-environent-with-powershell/</guid><description>Last week I created a simple example of a HealtCheck PowerShell script that connects to Microsoft System Center Virtual Machine Manager and displays information about the Hyper-V hosts and VMs managed by this server.
I run the PowerShell script from another Windows Server 2012 host. To make this work make sure the Hyper-V manager and the VMM Console is installed on the server. The VMM console can be installed from the Microsoft System Center 2012 Virtual Machine Manager ISO.</description></item><item><title>Windows Server 2012 PowerShell Cmdlets for Hyper-V help</title><link>http://localhost:1313/logbook/site/2012/03/07/windows-server-8-powershell-cmdlets-for-hyper-v-help/</link><pubDate>Wed, 07 Mar 2012 14:13:45 +0000</pubDate><guid>http://localhost:1313/logbook/site/2012/03/07/windows-server-8-powershell-cmdlets-for-hyper-v-help/</guid><description>In Windows 2008 &amp;amp; Windows2008 R2 there were no official PowerShell Cmdlets available for Hyper-V. This is changed in Windows 2012 and Windows 8. Windows Server 2012 and 8 has 162 or more PowerShell Cmdlets available for Hyper-V. Windows 8 uses PowerShell version 3.
Cmdlets are very powerful, that lets you automate all aspects of Hyper-V. Here some guidance how-to find the Cmdlets you need.
To view all the Hyper-V PowerShell Cmdlets:</description></item><item><title>List VM settings to CSV, HTML, gridview, screen and email</title><link>http://localhost:1313/logbook/site/2011/06/09/powercli-list-vm-settings-and-export-to-csv-html-gridview-screen-and-email/</link><pubDate>Thu, 09 Jun 2011 10:47:47 +0000</pubDate><guid>http://localhost:1313/logbook/site/2011/06/09/powercli-list-vm-settings-and-export-to-csv-html-gridview-screen-and-email/</guid><description>This PowerCLI script will display specified VM settings for all VMs in the vCenter server you specify. If you do an inventory, a health check or need to troubleshoot VMware environment this PowerCLI script can be useful.
The following VM settings will be displayed:
VMName, Hostname, IP address, OS version, Boottime, VMstate, Total vCPUs, CPU afinnity, CPU hot add status, CPU share, CPU limit, Overall CPU usage, CPU reservation, Total memory, Memory share, Memory usage, Memory hot add status, Memory limit, Memory reservation, Memory swap, Memory ballooning, Memory compression, Total NICs, VMware tools status, VMware Tools version, VM hardware version, Timesync status and CBT status.</description></item><item><title>VMware ESX Post installation configuration via PowerCLI</title><link>http://localhost:1313/logbook/site/2010/02/10/vmware-esx-post-installation-configuration-via-powercli/</link><pubDate>Wed, 10 Feb 2010 14:36:55 +0000</pubDate><guid>http://localhost:1313/logbook/site/2010/02/10/vmware-esx-post-installation-configuration-via-powercli/</guid><description>I made a simple example script using the VMware PowerCLI that can be used to do the post installation configuration of a VMware ESX 4 server. This script does the following things:
Connect to VMware ESX server Set the SC memory to 800MB Creates vSwitch2 and add vmnic2 and vmnic3 Add several PortGroups and VLANs to vSwitch2 Remove default PortGroup VM Network Creates a VMkernel VMotion port with IP address, subnetmask and VLAN Add vmnic0 and vmnic1 to vSwitch0, set for the VMotion port vmnic1 active and vmnic0 standby and for the Service Console port vmnic0 active and vmnic1 standby Configure NTP servers and open the firewall Sets advanced settings Disk.</description></item><item><title>New version of the PowerShell Healthcheck script released</title><link>http://localhost:1313/logbook/site/2009/01/06/new-version-of-the-PowerShell-healthcheck-script-released/</link><pubDate>Tue, 06 Jan 2009 20:09:40 +0000</pubDate><guid>http://localhost:1313/logbook/site/2009/01/06/new-version-of-the-PowerShell-healthcheck-script-released/</guid><description>VMware vCenter version Cluster information (Updated) VMware statistics (New) List the active Snapshots CDROMs connected to VMs Floppy drives connected to VMs Datastores Information such as free space RDM information (New) VM information such as VMware tools version, processor and memory limits VMs and there datastore (New) VMware timesync enabled Percentage disk space used inside the VM (New) – VC error logs last 5 days (New) It is possible to schedule this script and output the content to HTML and e-mail it.</description></item><item><title>New VMware Powerpack for PowerGUI</title><link>http://localhost:1313/logbook/site/2008/12/20/new-VMware-powerpack-for-powergui/</link><pubDate>Sat, 20 Dec 2008 18:22:16 +0000</pubDate><guid>http://localhost:1313/logbook/site/2008/12/20/new-VMware-powerpack-for-powergui/</guid><description>On the PowerGUI website is a new version off VMware PowerPack released.
A PowerPack extends the PowerGUI with a set of folders, nodes, links and actions that allow you to manage VMware Infrastructure. With the PowerPack no PowerShell knowledge is needed.
The new version(December 19, 2008 (2.0.0) has the following new enhancements and supported features:
reorganized the PowerPack structure to facilitate easier management of multiple hosts and to allow users to retrieve objects from one or more of the hosts they are managing whether they are already connected or not added support for browsing the VMware Inventory hierarchy (includes Hosts and Clusters, Virtual Machines and Templates, Networks and Datastores), including being able to browse directly into the file system on the datastores added many new links and actions exposed many more VMware Infrastructure objects through topological views and through integration in the hierarchy improved the performance of many nodes, links and actions added single sign-on support (note that connecting to multiple hosts using the same username but different passwords is currently not supported, but we are working on that and will provide support for this soon) tested management against Virtual Center 2.</description></item><item><title>Healthcheck PowerShell script on number six!</title><link>http://localhost:1313/logbook/site/2008/12/12/healthcheck-PowerShell-script-on-number-six/</link><pubDate>Fri, 12 Dec 2008 18:52:10 +0000</pubDate><guid>http://localhost:1313/logbook/site/2008/12/12/healthcheck-PowerShell-script-on-number-six/</guid><description>The Healthcheck PowerShell script I wrote for the VMware PowerShell scripting contest is on 6th position on the &amp;ldquo;Top 10 PowerShell scripts that VMware administrators should use&amp;rdquo; from Eric Siebert. Eric is the administrator of the site VMware-land.com that has the largest VMware link collection on the web.
I attended today the Dutch VMUG event and visited the presentation from Eric Sloof &amp;ldquo;Managing VI3 with PowerShell &amp;rdquo;. I saw in his presentation that I was on the 6th place.</description></item><item><title>VI Toolkit Extensions</title><link>http://localhost:1313/logbook/site/2008/11/04/vi-toolkit-extensions/</link><pubDate>Tue, 04 Nov 2008 12:57:17 +0000</pubDate><guid>http://localhost:1313/logbook/site/2008/11/04/vi-toolkit-extensions/</guid><description>Today I tested the VI Toolkit extensions. The VI Toolkit extensions are cmdlets that makes your life easier. Here are some functions of what the cmdlets can do:
The VI toolkit extensions require PowerShell V2 CTP 2 and the VI Toolkit.
Example:
list all VMs by name and list the size of the snapshots
Open VI-toolkit Connect-VIserver VCservername To add the extension, use the following command: Add-Module &amp;#34;D:\\Scripts\\viToolkitExtensions.psm1&amp;#34; Get-VM | Get-TkeSnapshotExtended | select Name, VM, SizeMB Output:</description></item></channel></rss>